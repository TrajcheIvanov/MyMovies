@model MyMovies.ViewModels.MovieDetailsDataModel

@{ ViewBag.Title = "Details"; }

@section Styles{
    <link href="~/css/sidebar.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-md-9">
        <div class="container" style="text-align:center">

            <h1>@Model.MovieDetails.Title <span class="badge rounded-pill bg-warning text-dark">@Model.MovieDetails.MovieType</span></h1>

            <img src="@Model.MovieDetails.ImgUrl" alt="Alternate Text" style="display:block; margin-left:auto; margin-right:auto; width:80%" />

            <h2> Stars</h2>
            <p>@Model.MovieDetails.Stars</p>

            <h2> Genre</h2>
            <p>@Model.MovieDetails.Genre</p>

            <h2> Storyline</h2>
            <p>@Model.MovieDetails.Storyline</p>

            <h2> Date created: @Model.MovieDetails.DateCreated</h2>
        </div>

        <br />
        <br />
        <hr />
        <h2>Comments: </h2>
        <hr />
        
    

        @if (User.Identity.IsAuthenticated)
        {
            
             <div >
                <textarea type="text" name="comment" class="form-control" cols="20" rows="5" required></textarea>
                <button type="submit" class="btn btn-primary m-2" onclick="AddComment(@Model.MovieDetails.Id, event)">Add Comment</button>
             </div>
                
                @*<button type="submit" class="btn btn-primary">Add Comment</button>*@



            @*<form asp-controller="Comments" asp-action="Add" method="post" onsubmit="return validateForm()">
                <input type="text" name="movieId" value="@Model.MovieDetails.Id" hidden />
                <div class="form-group">
                    <textarea type="text" name="comment" class="form-control" cols="20" rows="5" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Add Comment</button>
            </form>*@
        }


        <div id="commentSection">
             @foreach (var comment in Model.MovieDetails.Comments.OrderByDescending(x => x.DateCreated))
              {
                <div>
                <hr />

                     <p> <b>Comennted by:</b>  @comment.Username</p>
                     <p> <b>Date:</b>  @comment.DateCreated </p>
                     <p> @comment.Message</p>
                        @if ((User.Identity.IsAuthenticated && User.FindFirst("Username").Value == comment.Username) || (User.FindFirst("IsAdmin").Value == "True"))
                         {
                            <a onclick="deleteComment(@comment.Id, event)" class="btn btn-danger btn-sm text-white">Delete</a>
                            @*<a href="/Comments/Delete/@comment.Id" class="btn btn-danger btn-sm">Delete</a>*@
                         }
                 </div>
              }
         </div>

       
    </div>
    <div class="col-md-3">
        <partial name="SidebarPartial" for="@Model.SidebarData">
    </div>

</div>



@section Scripts{
    <script src="~/js/validator.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    
    <script>
        function AddComment(id, event) {
            console.log("Add comment");
            console.log("For movie with Id: " + id);


            var textarea = event.target.previousElementSibling;
            var commentToAdd = textarea.value;
            var user = "@User.FindFirst("Username").Value";

            var commentCreateModel = {
                Comment: commentToAdd,
                MovieId: id,
            }
            console.log(commentCreateModel.Comment)


            axios.post("https://localhost:44366/Comments/Add", commentCreateModel)
                .then(function (response) {
                    console.log(`Added comment`);
                    textarea.value = "";
                    var comment = document.createElement("div");
                    var userName = document.createElement("p");
                    userName.innerHTML = "<b> Comennted by:</b> " + user;
                    var dateCreated = document.createElement("p");

                    dateCreated.innerHTML = "<b>Date:</b> " + new Date().toLocaleString();
                    var message = document.createElement("p");
                    message.innerHTML = commentCreateModel.Comment;

                    var button = document.createElement("a");
                    button.classList.add("btn");
                    button.classList.add("btn-danger");
                    button.classList.add("btn-sm");
                    button.classList.add("text-white");
                    // need to get comment id from the response and pass it to the deleteComment function
                    button.onclick = function (event) { deleteComment(id, event) }
                    button.innerHTML = "Delete";
                    

                    comment.appendChild(userName);
                    comment.appendChild(dateCreated);
                    comment.appendChild(message);
                    comment.appendChild(button);

                   

                    var commentSection = document.getElementById("commentSection");
                    commentSection.insertBefore(comment, commentSection.firstChild);

                })
                .catch(function (error) {
                    console.log(error);
                })

        }

        function deleteComment(id, event) {
            console.log("deleting comment")
            console.log(event.target.parentNode)

            var url = "https://localhost:44366/Comments/Delete?id=" + id;

            axios.get(url)
                .then(function (response) {
                    console.log("comment deleted")
                    var commentForDelete = event.target.parentNode;
                    commentForDelete.innerHTML="";
                })
                .catch(function (error) {
                    console.log(error);
                })
        }


    </script>

} 